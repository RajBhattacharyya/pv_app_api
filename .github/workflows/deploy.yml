```yml
# Optimized Workflow
name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Configure SSH
      - name: Configure SSH
        run: |
          # Create .ssh directory if it does not exist
          mkdir -p ~/.ssh
          # Add SSH key
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          # Change permissions of the SSH key
          chmod 600 ~/.ssh/id_rsa

      # Copy files to EC2 using SSH
      - name: Copy Files to EC2
        run: |
          # Copy files to EC2 using SSH
          rsync -avz -e "ssh -i ~/.ssh/id_rsa" ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ec2-user/pv_app_api/

      # Install dependencies and build application on EC2 if necessary
      - name: Install and Build Application
        run: |
          # SSH into EC2 instance
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          # Navigate to application directory
          cd /home/ec2-user/pv_app_api
          # Check if dependencies need to be installed
          if [ -f "package.json" ]; then
            npm install
            npm run build
          fi
          EOF

      # Restart application on EC2
      - name: Restart Application
        run: |
          # SSH into EC2 instance and restart application
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          # Navigate to application directory
          cd /home/ec2-user/pv_app_api
          # Restart application
          pm2 restart app.js -i 0 || pm2 start app.js -i 0
          EOF

      # Validate application status
      - name: Validate Application Status
        run: |
          # SSH into EC2 instance and check application status
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "pm2 status"
```